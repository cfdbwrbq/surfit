/** \example map_task.tcl

This example shows how one goes from randomly spaced data points to an evenly sampled surface.
We have 13504 interpolation points (file <TT>surfit/examples/test/task.txt</TT>) and equidistant grid 
with more than 1000000 nodes! To produce interpolation evenly sampled surface we do the 
following things:	
\li load scattered points to the memory
\li create equidistant grid of 1024x1024 nodes
\li set some additional parameters (\ref tol "tolerance", \ref surfit_completer "surface behaviour between scattered points")
\li run CMOFS algorithm
\li save results to file

After gridding we calculate residuals in interpolation points, mean residual value and standart deviation.
To make residuals smaller it is necessary to make equidistant grid with smaller cells.

Here is image of resulting surface:

\htmlonly

<P ALIGN=CENTER>
<IMG alt="interpolation surface" src="../../../gallery/maps/map_task_full.gif" border="0">
</P>
<P ALIGN=CENTER> Pic 1. interpolation surface </P>

<P ALIGN=CENTER>
<IMG alt="small part of interpolation surface" src="../../../gallery/maps/map_task.gif" border="0" ALIGN=ABSMIDDLE>
</P>
<P ALIGN=CENTER> Pic 2. small part of interpolation surface </P>

\endhtmlonly

This result was obtained with <TT>"surfit/examples/test/map_task.tcl"</TT> script. 

Some comments to script:
\li \ref map_name variable used to set name of resulting surface
\li we use \ref tol variable to manage tolerance of iterative linear system solver algorithm.
If this value is too big, iterative algorithm will make low number of iterations. It leads
to rought result.
\li \ref grid_unload function call to remove grid from result file.

*/

