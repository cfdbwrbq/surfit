# Process this file with autoconf to produce a configure script.
AC_INIT(src/surfit/surfit_wrap.cxx)
AM_INIT_AUTOMAKE(surfit,3.0)

# test for c++ features
AC_PROG_CXX
AC_PROG_CXXCPP
# check for stdc headers
AC_HEADER_STDC

AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

# check for pthread 
AC_CHECK_LIB(pthread, main, [PTHREAD_INSTALLED="YES"], PTHREAD_INSTALLED="")

# check for gfortran
AC_CHECK_LIB(gfortran, main, [GFORTRAN_INSTALLED="YES"], GFORTRAN_INSTALLED="")

AH_TEMPLATE([HAVE_THREADS],["Define if you want to compile with multithreading support"])
AH_TEMPLATE([HAVE_NETCDF],["Define if you want to compile with GMT maps format support"])
AH_TEMPLATE([HAVE_LIBJPEG],["Define if you want to compile with JPEG import/export support"])

# check for zlib
AC_CHECK_HEADERS(zlib.h)
AC_CHECK_LIB(z, zlibVersion, [ZLIB_INSTALLED="YES"], ZLIB_INSTALLED="")

# check for libjpeg
AC_CHECK_HEADERS(jpeglib.h)
AC_CHECK_LIB(jpeg, main, [JPEG_INSTALLED="YES"], JPEG_INSTALLED="")

CXXFLAGS="-O3"

AC_ARG_ENABLE(debug, 
	AC_HELP_STRING(--enable-debug, compiling with debugging info),
	[if test x$enableval = xyes; then 
	CXXFLAGS="-g -ggdb"
	fi])

# Get the operating system and version number...
uname=`uname`
uversion=`uname -r | sed -e '1,$s/[[^0-9]]//g'`
if test "x$uname" = x; then
    # MingW doesn't provide any output when uname is run, even with "-s"...
    uname="CYGWIN"
fi

AC_ARG_ENABLE(pthread,  
	AC_HELP_STRING(--enable-pthread, compiling with threads support),
	[if test x$enableval = xno; then
	PTHREAD_INSTALLED="" 
	fi])

AC_ARG_ENABLE(surfit_io, [  --enable-surfit_io       turn on surfit_io compilation [default=yes]])
AC_ARG_ENABLE(freeflow, [  --enable-freeflow       turn on freeflow compilation [default=yes]])
AC_ARG_ENABLE(globe,    [  --enable-globe          turn on globe compilation [default=yes]])

if test x$enable_surfit_io != xno; then
   BUILD_SURFIT_IO="YES"
else
   BUILD_SURFIT_IO=""
fi                

if test x$enable_freeflow != xno; then
   BUILD_FREEFLOW="YES"
else
   BUILD_FREEFLOW=""
fi

if test x$enable_globe != xno; then
   BUILD_GLOBE="YES"
else
   BUILD_GLOBE=""
fi

#--------------------------------------------------------------------
#	Try to locate the Tcl package
#--------------------------------------------------------------------

TCLINCLUDE=
TCLLIB=
TCLPACKAGE=

AC_ARG_WITH(tclconfig,[  --with-tclconfig=path  Set location of tclConfig.sh],
        with_tclconfig="$withval")
AC_ARG_WITH(tcl,[  --with-tcl=path         Set location of Tcl package],[
	TCLPACKAGE="$withval"], [TCLPACKAGE=])
AC_ARG_WITH(tclincl,[  --with-tclincl=path     Set location of Tcl include directory],[
	TCLINCLUDE="-I$withval"], [TCLINCLUDE=])
AC_ARG_WITH(tcllib,[  --with-tcllib=path      Set location of Tcl library directory],[
	TCLLIB="-L$withval"], [TCLLIB=])

AC_MSG_CHECKING([for Tcl configuration])
# First check to see if --with-tclconfig was specified.
if test x"${with_tclconfig}" != x ; then
   if test -f "${with_tclconfig}/tclConfig.sh" ; then
      TCLCONFIG=`(cd ${with_tclconfig}; pwd)`
   else
      AC_MSG_ERROR([${with_tcl} directory doesn't contain tclConfig.sh])
   fi
fi
# check in a few common install locations
if test x"${TCLCONFIG}" = x ; then
    for i in `ls -d ${prefix}/lib 2>/dev/null` \
             `ls -d /usr/lib 2>/dev/null` \
             `ls -d /usr/lib/tcl* 2>/dev/null` \
	     `ls -d /usr/local/lib 2>/dev/null` ; do
	if test -f "$i/tclConfig.sh" ; then
	    TCLCONFIG=`(cd $i; pwd)`
	    break
	fi
    done
fi
if test x"${TCLCONFIG}" = x ; then
    AC_MSG_RESULT(no)
else
    AC_MSG_RESULT(found $TCLCONFIG/tclConfig.sh)
    . $TCLCONFIG/tclConfig.sh
    TCLINCLUDE=$TCL_INCLUDE_SPEC
    TCLLIB=$TCL_LIB_SPEC
fi

if test -z "$TCLINCLUDE"; then
   if test -n "$TCLPACKAGE"; then
	TCLINCLUDE="-I$TCLPACKAGE/include"
   fi
fi

if test -z "$TCLLIB"; then
   if test -n "$TCLPACKAGE"; then
	TCLLIB="-L$TCLPACKAGE/lib -ltcl"
   fi
fi

AC_MSG_CHECKING(for Tcl header files)
if test -z "$TCLINCLUDE"; then
AC_TRY_CPP([#include <tcl.h>], , TCLINCLUDE="")
if test -z "$TCLINCLUDE"; then
	dirs="$prefix/include /usr/local/include /usr/local/include/tcl8.0 /usr/include /opt/local/include"
	for i in $dirs ; do
		if test -r $i/tcl.h; then
			AC_MSG_RESULT($i)
			TCLINCLUDE="-I$i"
			break
		fi
	done
fi
if test -z "$TCLINCLUDE"; then
    	AC_MSG_ERROR(not found. surfit requies Tcl!)
fi
else
        AC_MSG_RESULT($TCLINCLUDE)
fi

AC_MSG_CHECKING(for Tcl library)
if test -z "$TCLLIB"; then
dirs="$prefix/lib /usr/local/lib /usr/lib /opt/local/lib"
for i in $dirs ; do
	if test -r $i/libtcl.a; then
	    AC_MSG_RESULT($i)
	    TCLLIB="-L$i -ltcl"
	    break
	fi
done
if test -z "$TCLLIB"; then
	AC_MSG_ERROR(not found. surfit requies Tcl!)
fi
else
AC_MSG_RESULT($TCLLIB)
fi

#--------------------------------------------------------------------
#	Try to locate the netcdf library
#--------------------------------------------------------------------
NETCDFINCLUDE=
NETCDFLIB=
NETCDF_INSTALLED=""

AC_ARG_WITH(netcdfincl,[  --with-netcdfincl=path     Set location of netcdf include directory],[
	NETCDFINCLUDE="-I$withval"], [NETCDFINCLUDE=])
AC_ARG_WITH(netcdflib,[  --with-netcdflib=path      Set location of netcdf library directory],[
	NETCDFLIB="-L$withval"], [NETCDFLIB=])

AC_MSG_CHECKING(for netcdf header files)
if test -z "$NETCDFINCLUDE"; then
AC_TRY_CPP([#include <netcdf.h>], , NETCDFINCLUDE="")
if test -z "$NETCDFINCLUDE"; then
	dirs="$prefix/include /usr/local/include /usr/local/include /usr/include /opt/local/include"
	for i in $dirs ; do
		if test -r $i/netcdf.h; then
			AC_MSG_RESULT($i)
			NETCDFINCLUDE="-I$i"
			break
		fi
	done
fi
if test -z "$NETCDFINCLUDE"; then
    	AC_MSG_RESULT("not found. surfit will be compiled without GMT maps format support!")
fi
else
        AC_MSG_RESULT($NETCDFINCLUDE)
fi

AC_MSG_CHECKING(for netcdf library)
if test -z "$NETCDFLIB"; then
dirs="$prefix/lib /usr/local/lib /usr/lib /opt/local/lib"
for i in $dirs ; do
	if test -r $i/libnetcdf.a; then
	    AC_MSG_RESULT($i)
	    NETCDFLIB="-L$i -lnetcdf"
	    NETCDF_INSTALLED="YES"
	    break
	fi
done
if test -z "$NETCDFLIB"; then
	AC_MSG_RESULT("not found. surfit will be compiled without GMT maps format support!")
fi
else
	AC_MSG_RESULT($NETCDFLIB)
fi

if [[ "$PTHREAD_INSTALLED" = "YES" ]] ; then 
	AC_DEFINE(HAVE_THREADS)
fi

if [[ "$NETCDF_INSTALLED" = "YES" ]] ; then
	AC_DEFINE(HAVE_NETCDF)
fi

if [[ "$JPEG_INSTALLED" = "YES" ]] ; then
	AC_DEFINE(HAVE_LIBJPEG)
fi

AC_SUBST(TCLINCLUDE)
AC_SUBST(TCLLIB)
AC_SUBST(NETCDFINCLUDE)
AC_SUBST(NETCDFLIB)

AC_CONFIG_HEADER(config.h:config.h.in)

AM_CONDITIONAL(HAVE_PTHREAD_INSTALLED, [test "x$PTHREAD_INSTALLED" != "x"])
AM_CONDITIONAL(HAVE_GFORTRAN_INSTALLED, [test "x$GFORTRAN_INSTALLED" != "x"])
AM_CONDITIONAL(HAVE_ZLIB_INSTALLED, [test "x$ZLIB_INSTALLED" != "x"])
AM_CONDITIONAL(HAVE_JPEG_INSTALLED, [test "x$JPEG_INSTALLED" != "x"])
AM_CONDITIONAL(MAKE_SURFIT_IO,  [test "x$BUILD_SURFIT_IO" != "x"])
AM_CONDITIONAL(MAKE_FREEFLOW,  [test "x$BUILD_FREEFLOW" != "x"])
AM_CONDITIONAL(MAKE_GLOBE,     [test "x$BUILD_GLOBE" != "x"])

AC_OUTPUT([Makefile])
