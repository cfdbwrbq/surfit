/*! \example contour.tcl

This example shows how to build surface using \ref d_cntr "contours". In this example
5 different contours were used. Two of them was (cntr_big_circle, cntr_center) approximated, 
another one (cntr_big_circle) approximated with weight, and for other two (cntr1, cntr2) 
inequalities was set.

\htmlonly
Here is image of resulting surface:

<P ALIGN=CENTER>
<IMG alt="surface built from areas" src="contour.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface built from areas </P>

\endhtmlonly

This result was obtained with <TT>"surfit/examples/test/points/points_exact.tcl"</TT> script. 

*/


/*! \example area.tcl

This example shows how to build surface using \ref d_area "areas". In this example
5 different areas were used. In two of them (area1 and area3) exact values were set,
in other two (area2 and area4) - approximate values. Inside area5 surface was set to be undefined.

\htmlonly
Here is image of resulting surface:

<P ALIGN=CENTER>
<IMG alt="surface built from areas" src="area.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface built from areas </P>

\endhtmlonly

This result was obtained with <TT>"surfit/examples/test/points/points_exact.tcl"</TT> script. 

*/

/*! \example area_ineq.tcl

This example shows how to build surface using \ref d_area "areas" and how to set inequalities for them. In this example
6 different areas were used. This example looks like \ref area.tcl "area.tcl" example, but one area (area6) with inequality was added.

\htmlonly
Here is image of resulting surface:

<P ALIGN=CENTER>
<IMG alt="surface built from areas using inequalities" src="area_ineq.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface built from areas using inequalities </P>

\endhtmlonly

This result was obtained with <TT>"surfit/examples/test/points/points_exact.tcl"</TT> script. 

*/

/*! \example points_exact.tcl
    This example shows how one goes from randomly spaced data points to an evenly sampled surface.
We have 13504 interpolation points (file <TT>surfit/examples/test/points/points.txt</TT>) and equidistant grid 
with more than 250000 nodes. To produce interpolation evenly sampled surface we do the 
following things:	
\li set \ref tol "tolerance"
\li load scattered data points from file
\li create equidistant grid with 512x512 nodes
\li set gridding rules (how to use data points and space between them)
\li run CMOFS algorithm
\li save results to file

Here is image of resulting surface:

\htmlonly

<P ALIGN=CENTER>
<IMG alt="interpolation surface" src="points_exact_full.gif" border="0">
</P>
<P ALIGN=CENTER> Pic 1. interpolated surface </P>

<P ALIGN=CENTER>
<IMG alt="small part of interpolation surface" src="points_exact.gif" border="0" ALIGN=ABSMIDDLE>
</P>
<P ALIGN=CENTER> Pic 2. small part of interpolated surface </P>

\endhtmlonly

This result was obtained with <TT>"surfit/examples/test/points/points_exact.tcl"</TT> script. 

Some comments to script:
\li \ref map_name variable used to set name of resulting surface
\li we use \ref tol variable to manage tolerance of iterative linear system solver algorithm.
If this value is too big, iterative algorithm will make low number of iterations. It leads
to rought result.

*/

/** \example points_approx.tcl

This example shows how one goes from randomly spaced data points to an evenly sampled surface.
We have 13504 approximation points (file <TT>surfit/examples/test/task.txt</TT>) and equidistant grid 
with more than 250000 nodes. To approximate points to evenly sampled smooth surface we do the 
following things:	
\li load scattered points to the memory
\li create equidistant grid of 512x512 nodes
\li set some additional parameters (\ref tol "tolerance", \ref completer "surface behaviour between scattered points")
\li run CMOFS algorithm
\li save results to file

Here is image of resulting surface:

\htmlonly
<P ALIGN=CENTER>
<IMG alt="approximation surface" src="points_approx_full.gif" border="0">
</P>
<P ALIGN=CENTER> Pic 1. approximation surface </P>

<P ALIGN=CENTER>
<IMG alt="small part of approximation surface" src="points_approx.gif" border="0">
</P>
<P ALIGN=CENTER> Pic 2. small part of approximation surface </P>
\endhtmlonly

This result was obtained with <TT>"surfit/examples/test/map_wtask.tcl"</TT> script. 

Some comments to script:
\li \ref map_name variable used to set name of resulting surface
\li we use \ref tol variable to manage tolerance of iterative linear system solver algorithm.
If this value is too big, iterative algorithm will make low number of iterations. It leads
to rought result.
\li \ref grid_unload function call to remove grid from result file.
\li to produce more smoother surface you should reduce weight value in \ref points_add command. To produce more
precise approximation (surface tends to interpolation) enlarge weight value in \ref points_add command.

*/

/** \example points_ineq.tcl

This examples shows how to use inequality conditions in points to obtain evenly sampled surface.
Here we have two set of points: blue (points_geq) and red (points_leq). For blue points surface should
be greater than or equal to points values, for red "less than or equal".

Here is image of resulting surface:

\htmlonly
<P ALIGN=CENTER>
<IMG alt="surface with inequality conditions" src="points_ineq.gif" border="0">
</P>
<P ALIGN=CENTER> Pic 1. surface with inequality conditions </P>
\endhtmlonly

Some comments to script:
\li \ref map_name variable used to set name of resulting surface
\li we use \ref tol variable to manage tolerance of iterative linear system solver algorithm.
\li \ref grid_unload function call to remove grid from result file.
*/

/*! \page examples surfit examples

\htmlonly
<UL>
<LI> <B>Test (<TT>surfit/examples/test</TT>)</B>: tests base surfit features
	<UL>
	<LI>
	<a href="../surfit_src/html/map__task_8tcl-example.html">Interpolation of scattered data points</a>
	<LI>
	<a href="../surfit_src/html/map__flt_8tcl-example.html">Interpolation of scattered data points with faults</a>
	<LI>
	<a href="../surfit_src/html/map__trend_8tcl-example.html">Interpolation of scattered data points with trend and fault</a>
	<LI>
	<a href="../surfit_src/html/map__wtask_8tcl-example.html">Approximation of scattered data points</a>
	<LI>
	<a href="../surfit_src/html/map__iso_8tcl-example.html">Interpolation of isolines</a>
	<LI>
	<a href="../surfit_src/html/map__wiso_8tcl-example.html">Approximation of isolines</a>
	<LI>
	<a href="../surfit_src/html/map__cntr_8tcl-example.html">Interpolation of contours</a>
	<LI>
	<a href="../surfit_src/html/map__wcntr_8tcl-example.html">Approximation of contours</a>
	<LI>
	<a href="../surfit_src/html/map__area_8tcl-example.html">Interpolation of areas</a>
	<LI>
	<a href="../surfit_src/html/map__warea_8tcl-example.html">Approximation of areas</a>
	<LI>
	<a href="../surfit_src/html/map__func_8tcl-example.html">Interpolation of ordered data points</a>
	<LI>
	<a href="../surfit_src/html/map__wfunc_8tcl-example.html">Approximation of ordered data points</a>
	<LI>
	<a href="../surfit_src/html/map__defarea_8tcl-example.html">Setting domain of definition</a>
        </LI>
	</UL>
<LI> <B>Seism (<TT>surfit/examples/seism</TT>)</B>: examples of structural modeling for reservoir Top and Base depth maps reconstruction
	<UL>
	<LI>
	<a href="../surfit_src/html/map__T0_8tcl-example.html">map of T0</a>
	<LI>
	<a href="../surfit_src/html/map__speed_8tcl-example.html">map of speed</a>
	<LI>
	<a href="../surfit_src/html/map__aoup_8tcl-example.html">Reservoir Top Depth</a>
	<LI>
	<a href="../surfit_src/html/map__aobt_8tcl-example.html">Reservoir Base Depth</a>
	</UL>
<LI> <B>Volumetrics (<TT>surfit/examples/volumetrics</TT>)</B>: examples of calculation volumes of oil and water in a reservoir, based on surface
sets of structural and property data.
</LI>
</UL>
\endhtmlonly
*/