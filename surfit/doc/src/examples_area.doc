/*! \example area.tcl 

This example shows how to build \ref d_surf "surface" by approximating \ref d_area 
"areas" with constant real numbers. In this example 5 different areas were used. 
Suppose that for three of them (area1, area3 and area5) exact values are known, for 
other two (area2 and area4) - only approximative values. So, we want to build surface, 
which approximates as exactly as possible values for areas 1,3 and 5, and "not so 
exactly" for areas 2 and 4.

\sa \ref surfit::area "area", \ref surfit::area_add "area_add", \ref surfit::completer "completer"

To produce this surface we should do the following things:
\li load areas to the memory
\li create equidistant grid
\li set some additional parameters (\ref surfit tol "tolerance", \ref surfit::map_name "map_name")
\li create sequence of \ref tcl_rules "gridding rules" (how to use areas and space between them)
\li run \ref surfit algorithm
\li save results to file

\htmlonly
Here is the image of the resulting surface (green colour for areas 1,3 and 5, red colour for areas 2 and 4):

<P ALIGN=CENTER>
<IMG alt="surface built from areas" src="area.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface built from areas </P>

\endhtmlonly

This result was obtained with <TT>"examples/surfit/curvs/area.tcl"</TT> script. 

*/

/*! \example area_ineq.tcl

This example shows how to build \ref d_surf "surface" by approximating \ref d_area "areas"
with constant real numbers and how to add inequalities on resulting surface using areas. 
In this example 6 different areas were used. This example looks like \ref area.tcl 
"area.tcl" example, but one area (area6) with inequality was added. 

\sa \ref surfit::area_leq "area_leq", \ref surfit::area_geq "area_geq", \ref surfit::area "area", 
\ref surfit::area_add "area_add", \ref surfit::completer "completer"

\htmlonly
Here is the image of the resulting surface (green colour for areas 1,3 and 5, red colour for 
areas 2 and 4, magenta for area 6):

<P ALIGN=CENTER>
<IMG alt="surface built from areas using inequalities" src="area_ineq.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface built from areas using inequalities </P>

\endhtmlonly

This result was obtained with <TT>"examples/surfit/curvs/area_ineq.tcl"</TT> script. 

*/

/*! \example area_mean.tcl

This example shows how to build \ref d_surf "surface" by approximating \ref d_area "areas" with 
constant real numbers and how to set additional condition (mean value) on surface in area. In this 
example 6 different areas were used. This example looks like \ref area.tcl "area.tcl" 
example, but one area (area6) with mean condition was added. 

\sa \ref surfit::area_mean "area_mean", \ref surfit::area "area", \ref surfit::area_add "area_add", \ref surfit::completer "completer"

\htmlonly
Here is the image of the resulting surface (green colour for areas 1,3 and 5, red colour for 
areas 2 and 4, magenta for area 6):

<P ALIGN=CENTER>
<IMG alt="surface with mean value = 30, built from areas" src="area_mean.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface with mean value = 30, built from areas </P>

\endhtmlonly

This result was obtained with <TT>"examples/surfit/curvs/area_mean.tcl"</TT> script. 

*/

/*! \example area_surf.tcl

This example shows how to build \ref d_surf "surface" by approximating other surface in 
\ref d_area "areas". In this example 5 different areas were used. 
Suppose that for four of them (area1, area2, area3 and area4) we know surface values 
approximately, and for one of them (area6) we know them exactly. So, we want to build surface, 
which approximates as exactly as possible values for area6 and "not so 
exactly" for areas 1-4.

\htmlonly
Here is the image of the resulting surface (red colour for areas 1-4, green colour for area6):

<P ALIGN=CENTER>
<IMG alt="surface built from regions of other surface" src="area_surf.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface built from regions of other surface </P>

\endhtmlonly

This result was obtained with <TT>"examples/surfit/curvs/area_surf.tcl"</TT> script. 
*/

/*! \example area_surf_ineq.tcl

This example shows how to add inequalities conditions on resulting surface, which a set in
\ref d_area "areas" with other \ref d_surf "surface" values. In this example areas 1,3,5 were
used to set \ref surfit::area_surf_geq "greater than or equal to" inequality condition with 
"test_func" surface. Areas 2,4,6 were used to set \ref surfit::area_surf_leq "lower than or equal to" 
inequality condition.

\htmlonly
Here is the image of the resulting surface (red colour for areas 1,3,5, green colour for areas 2,4,6):

<P ALIGN=CENTER>
<IMG alt="surface built from inequalities for regions of other surface" src="area_surf_ineq.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface built from inequalities for regions of other surface </P>

\endhtmlonly

This result was obtained with <TT>"examples/surfit/curvs/area_ineq.tcl"</TT> script. 
*/

/*! \example area_wmean.tcl
This example shows how to build \ref d_surf "surface" by approximating \ref d_area "areas" with 
constant real numbers and how to set additional condition (weighted mean value) on surface in area. 
In this example 6 different areas were used. This example looks like \ref area_mean.tcl "area_mean.tcl" 
example, but for area6 weighted mean condition was set. 

\htmlonly
Here is the image of the resulting surface (green colour for areas 1,3 and 5, red colour for 
areas 2 and 4, magenta for area 6):

<P ALIGN=CENTER>
<IMG alt="surface with weighted mean value = 30, built from areas" src="area_wmean.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Surface with weighted mean value = 30, built from areas </P>

\endhtmlonly

This result was obtained with <TT>"examples/surfit/curvs/area_wmean.tcl"</TT> script. 

*/

/*! \example area_completer.tcl
This example shows how to use \ref surfit::area_completer "area_completer" gridding rule. This rule allows you to
apply \ref surfit::completer "completer" rule in some area. This example shows how to modify resulting surface
behaviour in the central (blue) area. The \ref surfit::completer "completer" gridding rule was modified: anisotropy
with angle 30 degrees and factor 3 was added inside area.

\htmlonly
Here is the image of the resulting surface 

<P ALIGN=CENTER>
<IMG alt="resulting surface" src="area_completer.jpg" border="0">
</P>
<P ALIGN=CENTER> Pic 1. Resulting surface </P>

\endhtmlonly

This result was obtained with <TT>"examples/surfit/curvs/area_completer.tcl"</TT> script. 

*/
